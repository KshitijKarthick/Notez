"use strict";angular.module("notezApp",["ngAnimate","ngCookies","ngResource","ngRoute","ngSanitize","ngTouch"]).config(["$routeProvider",function(a){a.when("/",{templateUrl:"views/main.html",controller:"NotesController",controllerAs:"notes"}).when("/about",{templateUrl:"views/about.html",controller:"AboutCtrl",controllerAs:"about"}).otherwise({redirectTo:"/"})}]),angular.module("notezApp").controller("NotesController",["$timeout","modal",function(a,b){this.showAlert=!1,this.alertMessage="",this.selectedNoteTitle="",this.selectedNoteContent="",this.modal=b,this.db=new Dexie("notez"),this.db.version(1).stores({notez:"id,title,content,timestamp"}),this.db.open()["catch"](function(a){console.error("IndexedDB support not present",a)}),this.notesList=[],this.db.notez.each(function(b){a.apply(this.notesList.push(b))}.bind(this)),this.addNote=function(){function a(a){for(var b=5381,c=0;c<a.length;c++){var d=a.charCodeAt(c);b=(b<<5)+b+d}return b}var b=(new Date).getTime(),c={title:this.selectedNoteTitle,content:this.selectedNoteContent,timestamp:b,id:a(this.selectedNoteTitle+b)};this.notesList.push(c),this.db.notez.add(c),this.alert("Created "+this.selectedNoteTitle+" successfully"),this.selectedNoteTitle="",this.selectedNoteContent=""},this.removeNote=function(a){for(var b=0;b<this.notesList.length;b++)if(this.notesList[b].id===a&&b>-1){var c=this.notesList.splice(b,1);this.db.notez["delete"](c[0].id),this.alert("Deleted "+c[0].title+" successfully");break}},this.editNote=function(a){for(var b=0;b<this.notesList.length;b++)if(this.notesList[b].id===a&&b>-1){this.selectedNoteTitle=this.notesList[b].title,this.selectedNoteContent=this.notesList[b].content,this.modal.setModalData("Edit a Note","Save a Note",function(){this.notesList[b].title=this.selectedNoteTitle,this.notesList[b].content=this.selectedNoteContent,this.notesList[b].timestamp=(new Date).getTime(),this.db.notez.update(this.notesList[b].id,this.notesList[b]),this.selectedNoteTitle="",this.selectedNoteContent=""}.bind(this));break}},this.invokeCreationofNote=function(){this.modal.setModalData("Create a Note","Create Note",function(){this.addNote()}.bind(this))},this.alert=function(b){this.alertMessage=b,this.showAlert=!0,a(function(){this.showAlert=!1}.bind(this),3e3)}}]).factory("modal",function(){var a="Title",b="Do Task",c=function(){console.log("Hello User")},d=function(d,e,f){a=d,b=e,c=f},e=function(){return a},f=function(){return b},g=function(){return c};return{getModalTitle:e,getActionButtonTitle:f,setModalData:d,action:c,getAction:g}}).controller("HeaderController",["$scope","$location",function(a,b){a.isActive=function(a){return a===b.path()}}]).filter("orderObjectBy",function(){return function(a,b,c){var d=[];return angular.forEach(a,function(a){d.push(a)}),d.sort(function(a,c){return a[b]>c[b]?1:-1}),c&&d.reverse(),d}}),angular.module("notezApp").controller("AboutCtrl",function(){this.awesomeThings=["HTML5 Boilerplate","AngularJS","Karma"]}),angular.module("notezApp").run(["$templateCache",function(a){a.put("views/about.html",'<div class="jumbotron"> <h4>Kshitij Karthick</h4> <h5>Notez application utilising IndexedDB</h5> </div>'),a.put("views/main.html",'<div class="container"> <div class="row well notes-container"> <div class="col-md-3 col-xs-12 col-sm-6 col-md-offset-1 panel panel-default note" ng-repeat="note in notes.notesList | orderObjectBy:\'note.timestamp\':true track by note.timestamp"> <div class="panel-body"> <h4> {{note.title}} <span ng-click="notes.editNote({{note.id}})" class="edit-icon pull-right glyphicon glyphicon-pencil" aria-hidden="true" data-toggle="modal" data-target="#myModal"></span> <span ng-click="notes.removeNote({{note.id}})" class="trash-icon pull-right glyphicon glyphicon-trash" aria-hidden="true"></span> </h4> <p>{{note.content}}</p> <h6> {{note.timestamp | date:\'short\'}} </h6> </div> <div class="clearfix visible-xs-block"></div> </div> </div> <div class="alert alert-info" ng-show="notes.showAlert" role="alert">{{notes.alertMessage}}</div> <button type="button" class="btn create-button" data-toggle="modal" data-target="#myModal" ng-click="notes.invokeCreationofNote()"> Create a Note </button> <div class="modal fade" id="myModal"> <div class="modal-dialog"> <div class="modal-content"> <div class="modal-header"> <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button> <h4 class="modal-title">{{notes.modal.getModalTitle()}}</h4> </div> <div class="modal-body"> <form class="form-horizontal"> <div class="form-group"> <label class="col-sm-2 control-label">Title</label> <div class="col-sm-10"> <input type="text" ng-model="notes.selectedNoteTitle" class="form-control" id="title" placeholder="Title"> </div> </div> <div class="form-group"> <label class="col-sm-2 control-label">Content</label> <div class="col-sm-10"> <textarea name="Content" class="form-control" rows="3" ng-model="notes.selectedNoteContent" placeholder="Content"></textarea> </div> </div> </form> </div> <div class="modal-footer"> <button type="button" class="btn btn-default" data-dismiss="modal">Close</button> <button type="button" class="btn btn-primary" ng-click="(notes.modal.getAction())()" data-dismiss="modal">{{notes.modal.getActionButtonTitle()}}</button> </div> </div><!-- /.modal-content --> </div><!-- /.modal-dialog --> </div><!-- /.modal --> <!-- Button trigger modal --> </div>')}]);